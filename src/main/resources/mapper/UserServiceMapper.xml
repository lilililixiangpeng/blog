<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.web.mapper.UserServiceMapper">
    <insert id="SaveUser" parameterType="demo.web.model.User">
        INSERT INTO user (username,password,email) VALUES (#{username},#{password},#{email})
    </insert>

    <select id="FindUser" parameterType="String" resultType="String">
        SELECT password FROM user WHERE username = #{username}
    </select>

    <select id="SearchInformation" resultMap="rolemap" parameterType="int">
        SELECT * FROM user u, role r WHERE id = #{id} and rid in (SELECT role_id FROM role_user WHERE user_id = #{id})
    </select>

    <resultMap id="rolemap" type="demo.web.model.User">
        <id column="id" property="id"></id>
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="phonenumber" property="phonenumber" />
        <result column="email" property="email" />
        <collection property="role" ofType="demo.web.model.Role">
            <id column="rid" property="rid"></id>
            <result column="role" property="role" />
        </collection>
    </resultMap>

    <resultMap id="AllUser" type="demo.web.model.User">
        <id column="id" property="id"></id>
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="phonenumber" property="phonenumber" />
        <result column="email" property="email" />
        <result column="userstate" property="userstate"/>
    </resultMap>
    
    <select id="SearchUserId" resultType="int" parameterType="String">
        SELECT id FROM user WHERE username = #{username}
    </select>



    <select id="FindAllUser" resultMap="AllUser">
        SELECT * FROM user WHERE id in (SELECT user_id from role_user WHERE role_id = 1) and username not in (SELECT username FROM admin)
    </select>


    <resultMap id="BaseResultMap" type="demo.web.model.User" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id"></id>
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="phonenumber" property="phonenumber" />
        <result column="email" property="email" />
        <result column="userstate" property="userstate"/>
    </resultMap>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username,password , phonenumber,email,userstate
    </sql>

    <select id="findByPage" resultMap="BaseResultMap">
        select * from user
    </select>
    
    <delete id="DeleteUser" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <delete id="DeleteUserRole" parameterType="int">
        DELETE FROM role_user WHERE user_id = #{id}
    </delete>

    <insert id="AddUserByAdmin" parameterType="demo.web.model.User">
        INSERT INTO user (username,password,phonenumber,email,userstate,userimg) VALUES (#{username},#{password},#{phonenumber},#{email},#{userstate},#{userimg})
    </insert>

    <insert id="AddUserRole" parameterType="int">
        INSERT INTO role_user (user_id,role_id) VALUES (#{id},1)
    </insert>

    <update id="UpdateUser" parameterType="demo.web.model.User">
        UPDATE user
        SET
        username = #{username},
        password = #{password},
        phonenumber = #{phonenumber},
        email = #{email},
        userstate = #{userstate}
        WHERE id = #{id}
    </update>

    <update id="UpdateUserbyUser" parameterType="demo.web.model.User">
        UPDATE user
        SET
        password = #{password},
        phonenumber = #{phonenumber},
        email = #{email}
        WHERE id = #{id}
    </update>

    <select id="FindUserImg" parameterType="String" resultType="String">
        SELECT userimg FROM user WHERE username = #{username}
    </select>

    <resultMap id="userrole" type="demo.web.model.Role">
        <id property="rid" column="rid"></id>
        <result property="role" column="role"></result>
    </resultMap>
    
    <select id="SearchRoleByUsername" parameterType="int" resultMap="userrole">
        SELECT * FROM role WHERE rid in (SELECT role_id FROM role_user WHERE user_id = #{id})
    </select>

    <update id="updateimgpath">
        UPDATE user
        SET
        userimg = #{imgpath}
        WHERE id = #{id}
    </update>
</mapper>